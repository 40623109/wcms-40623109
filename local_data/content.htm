<h1>組員</h1><p>國立虎尾科技大學機械設計工程系期中報告</p><p>機設一甲</p><p>第一組組員:</p><p>王馨慧</p><p>簡稜雅</p><p>李如芳</p><h5>相關網站: <a href="http://mde.tw">http://mde.tw</a></h5><h1>前言</h1><p>何謂網際內容管理系統 ?&nbsp;可應用至電腦或網路裡，在合作模式之下，用於管理工作流程的一套制度。</p><p>特點:</p><ul><li>有利於為多數人員的投稿及分享所儲存的資料</li><li>有助於快捷簡便地儲存資料及檢索到所需要的資料</li><li>資料的重複錄入工作</li><li>降低工作報告寫作的難度</li><li>加強用戶間的交流</li></ul><h5>相關網站: <a href="https://zh.wikipedia.org/wiki/%E5%86%85%E5%AE%B9%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F">維基百科</a></h5><h1>網際內容管理</h1><p>這是位於 <a href="https://www.heroku.com">heroku</a> 的 <a href="https://github.com/chiamingyen/cmsimfly">CMSimfly</a> 網站, 由於能在網頁中維護的 <a href="https://www.heroku.com">heroku</a> 網站, 必須與其他雲端儲存系統結合, 而本站是在近端維護後, 提交推送到 <a href="https://www.heroku.com">heroku</a>, 因此目前只能展示倉儲中的網際內容資料, 透過瀏覽器修改的內容, 將會不定期遭 <a href="https://www.heroku.com">heroku</a> 刪除.</p><p>儘管如此, 在近端維護後提交推送到遠端的資料維護模式, 仍可用來呈現網際內容管理相關程式的執行結果.</p><h2>課程內容1</h2><p><span style="background-color: #ffff00;">什麼是全球資訊網?</span></p><p>(<em>World Wide Web</em>，簡稱WWW)是一個由許多互相連結的超文字組成的系統，通過網際網路存取。</p><p>全球資訊網的核心部分是由三個標準構成的：</p><ul><li>統一資源識別元（<a class="mw-redirect" title="URI" href="https://zh.wikipedia.org/wiki/URI">URI</a>），這是一個統一的為資源定位的系統。</li><li>超文字傳送協定（<a class="mw-redirect" title="HTTP" href="https://zh.wikipedia.org/wiki/HTTP">HTTP</a>），它負責規定用戶端和伺服器怎樣互相交流。</li><li>超文件標示語言（<a title="HTML" href="https://zh.wikipedia.org/wiki/HTML">HTML</a>），作用是定義超文字文件的結構和格式。</li></ul><p>參考網站:<a href="https://zh.wikipedia.org/wiki/%E4%B8%87%E7%BB%B4%E7%BD%91">維基百科</a></p><p><span style="background-color: #ffff00;">智慧機械需要什麼?</span></p><ul><li>數學</li><li>程式</li><li>網路</li><li>英文</li></ul><p><strong><span style="background-color: #ffff00;">IPV4與IPV6差別</span></strong></p><h6><img src="/download/?type=images&amp;filename=IPV4IPV6差別.png" alt="" width="363" height="159" /></h6><h2>課程內容2</h2><p><span style="background-color: #ffff00;">登入 heroku</span></p><p>先在近端啟動 CMSimfly, 設法以網際模式協同維護內容後, 以 heroku login 登入 Heroku , 將近端內容提交推送到 Heroku 與同步 github 倉儲.</p><p>heroku login</p><p>git clone or git pull 後以 python&nbsp; app_run.py 啟動, 並以瀏覽器打開 <a>http://localhost:5000</a></p><p><span style="background-color: #ffff00;">平行批次檔指令</span></p><p>由於在近端啟動 CMSimfly 網站時, 希望以 batch 指令同時啟動 Flask 網際程式與近端網頁, 這時需要利用能平行開啟執行的 MParallel 工具, 從&nbsp;<a href="https://github.com/lordmulder/MParallel">https://github.com/lordmulder/MParallel&nbsp;</a>&nbsp;下載 mparallet.exe 後, 放入可攜系統的 y:\ 目錄, 建立 run.bat 如下:</p><pre class="brush:ps;auto-links:false;toolbar:false" contenteditable="false">MParallel.exe --count=2 python app_run.py : C:\Program Files (x86)\Google\Chrome\Application\chrome.exe "http://localhost:5000"</pre><p>啟動後便可同時執行近端 app_run.py 與 chrome 網頁開啟.</p><p><span style="background-color: #ffff00;">在近端維護網站內容</span></p><p>CMSimfly&nbsp; 在區網或廣域網路中執行, 登入後可以維護網站內容</p><p><span style="background-color: #ffff00;">提交推送網站版本</span></p><p>提交推送到 Heroku</p><p>git add .</p><p>git commit -m "提交新版本"</p><p>git push</p><p><span style="background-color: #ffff00;">同步提交推送到 Github</span></p><p>先設定 git remote add 到對應的 github 空倉儲</p><p>git remote add github <a href="https://github.com/mdecourse/wcms-scrum3.git">https://github.com/mdecourse/wcms-scrum3.git</a></p><p>接著再將版本推送到 wcm-scrum3</p><p>git push github</p><h2>課程內容3</h2><p>Linux 操作指令</p><p>ls -l&nbsp; &nbsp; &nbsp;詳細列出檔案系統結構</p><p>ls -a&nbsp; &nbsp; &nbsp;顯示隱藏檔 （以"."開頭的檔</p><p>pwd&nbsp; &nbsp; &nbsp;顯示目前所在目錄的指令</p><p>clear&nbsp; &nbsp; &nbsp;清空螢幕</p><p>ifconfig&nbsp; &nbsp; &nbsp;查詢目前系統的網路卡狀況</p><p>cd&nbsp; &nbsp; &nbsp;變換工作路徑</p><p>sudo&nbsp; &nbsp; &nbsp;用別的身分執行命令，並非切換，而是用自己的密碼</p><p>reboot&nbsp; &nbsp; &nbsp;用來重新開機的指令（或關機），可以配合寫入緩衝資料的 sync 指令動作</p><p>參考網站: <a href="http://linux.vbird.org/linux_basic/redhat6.1/linux_06command.php">Linux 操作指令</a></p><p>proxy.reg(自動設定proxy)</p><p>disadle_proxy.reg(自動清除proxy)</p><p>參考網站:<a href="http://linux.vbird.org/linux_basic/redhat6.1/linux_06command.php">proxy</a></p><p>Virtualbox 網路設定</p><ul><li>NAT 網路</li><li>Host-only 網路</li><li>Bridged 網路</li></ul><h5><span style="background-color: #ffffff; color: #626262;">參考網站:<a href="https://github.com/mdecourse/wcms2018/issues/6">Virtualbox 網路設定</a></span></h5><h2>筆記</h2><p><img src="/download/?type=images&amp;filename=IMG20180427041654[1].jpg" alt="" width="209" height="279" /><img src="/download/?type=images&amp;filename=IMG20180427041710[1].jpg" alt="" width="209" height="279" /><img src="/download/?type=images&amp;filename=IMG20180427041724[1].jpg" alt="" width="209" height="279" /><img src="/download/?type=images&amp;filename=IMG20180427041739[1].jpg" alt="" width="209" height="279" /><img src="/download/?type=images&amp;filename=IMG20180427041749[1].jpg" alt="" width="209" height="279" /></p><p>&nbsp;</p><h2>心得</h2><p>組員上課心得</p><p>王馨慧</p><p>&nbsp;</p><p>簡稜雅</p><p>這學期我們學了許多關於網際網路的相關知識，雖然老 師說過這是一門輕鬆愉快的課，但我怎麼覺得還是遇到了許多困難和挫折呢，但我相信我每堂課都有認真在聽，有認真在解決問題，一定也學到了不少。</p><p>李如芳</p><p>剛開始對網際網路的內容很不熟,老師說過每個人對於剛接觸的東西定不會很熟,所以遇到不會的定要問要查清楚,我每堂課都非常努力學習,雖然還是有占大多數不會,但是我學得很開心,也正在努力著吸收不懂不同的知識,但不知道能堅持多久,我會繼續努力.</p><h1>自評成績</h1><p>王馨慧&nbsp; &nbsp;:&nbsp; &nbsp;</p><p>簡稜雅&nbsp; &nbsp;:&nbsp; &nbsp;</p><p>李如芳&nbsp; &nbsp;:&nbsp; &nbsp;</p><h1>課程問卷</h1><p>&nbsp;</p><p><iframe src="https://docs.google.com/forms/d/e/1FAIpQLSeL2e3S__mWIMHryxh3r61ajcNSY1DRrvak9GckMfil17Qlrw/viewform?embedded=true" width="700" height="520" frameborder="0" marginwidth="0" marginheight="0">載入中…</iframe></p><h1>課程內容</h1><h2><strong>cd2018</strong></h2><p>協同產品設計實習</p><p>倉儲: <a href="https://github.com/mdecourse/cd2018">https://github.com/mdecourse/cd2018</a></p><p>議題: <a href="https://github.com/mdecourse/cd2018/issues">https://github.com/mdecourse/cd2018/issues</a></p><p>簡介</p><p>本學期的課程在承接上學期電腦輔助設計實習中所建構的鋼球循環運動系統, 加上四輪車或者多連桿行走機構, 在位於 100cm x 60cm 平台上的四個角落的循環運動系統間, 負責運送一定數量之鋼球,&nbsp; 各循環運動系統的尺寸以 20cm x 15cm x 15cm 為限.</p><p>使用工具</p><p>可攜程式套件: <a href="https://drive.google.com/file/d/1qSVNH1052bcPyepgGfxN8dciufOM0gUu/view?usp=sharing">kmol_level2</a></p><p>電腦輔助設計套件: Solidworks, Inventor, Creo, Onshape 或 Solvespace</p><p>機器人模擬平台: V-rep</p><p>程式語言: Python, Lua, C/C++</p><p>執行內容</p><p>第九週前以 3 人一組, 完成下列要求:</p><ol><li>在 V-rep 模擬平台中, 展示各組所選定的鋼球運動系統, 是否可以完成至少兩個週期的循環運動?</li><li>各組頂球機構的位移、速度與加速度分析, 手動運算是否與程式驗算或 V-rep 模擬相符?</li><li>詳細說明各組如何進行協同設計, 如何利用 Gitbook、Github 與近端或雲端主機增加設計流程效益?</li><li>提供各組鋼球運動系統的細部零件材料表、各零件工程圖與組立檔, 若使用 Solidworks, Inventor 或 Creo 請提供相關檔案, 若使用 Onshape, 請提供個別零組件與工程圖的網路連結.</li><li>所有組員的貢獻請各自使用學號登記下的 cd2018 倉儲展示, 各組期中報告則整理在各組的 Gitbook 中.</li></ol><h6><strong>wcms2018</strong></h6><h2><strong>vecp2018</strong></h2><p>計算機程式</p><p>倉儲: <a href="https://github.com/mdecourse/vecp2018">https://github.com/mdecourse/vecp2018</a></p><p>議題: <a href="https://github.com/mdecourse/vecp2018/issues">https://github.com/mdecourse/vecp2018/issues</a></p><p>簡介</p><p>本學期的課程在教導學員使用 <a href="https://www.lua.org/">Lua</a> 程式語言, 並利用 <a href="https://www.lua.org/">Lua</a> 程式語言控制 <a href="http://www.coppeliarobotics.com/">V-rep</a> 平台中的機器人系統.</p><p>使用工具</p><p>可攜程式套件: <a href="https://drive.google.com/file/d/1ekR_kri-_UWlTd_f1vZano0N2-zzQUTn/view?usp=sharing">kmol_level1</a></p><p>機器人模擬平台: <a href="http://www.coppeliarobotics.com/">V-rep</a></p><p>程式語言: Lua</p><p>執行內容</p><p>第九週前以 3 人一組, 完成下列要求:</p><ol><li>整理 <a href="https://github.com/mdecourse/vecp2018/issues/11">https://github.com/mdecourse/vecp2018/issues/11</a> 中所列出的 Lua 程式語法</li><li>利用 <a href="http://mde.tw/vecp2018/lua/SchoolProject/">http://mde.tw/vecp2018/lua/SchoolProject/</a> 繪製虎尾科技大學校徽</li><li>利用 <a href="http://mde.tw/vecp2018/lua/SchoolProject/">http://mde.tw/vecp2018/lua/SchoolProject/</a> 繪製美國國旗</li><li>請將上述內容寫在各組的 vecp2018 倉儲中</li></ol><h2>學習 Lua</h2><p><a href="/lua">Lua 網際程式環境</a></p><p>以下為網際 Lua 系統中的 <a href="/lua?filename=fun1">Canvas 繪圖範例</a>:</p><pre class="brush:lua;auto-links:false;toolbar:false" contenteditable="false">-- 導入 "js" 模組local js = require "js"-- global 就是 javascript 的 windowlocal global = js.globallocal document = global.document-- html 檔案中 canvas　id 設為 "canvas"local canvas = document:getElementById("canvas")-- 將 ctx 設為 canvas 2d 繪圖畫布變數local ctx = canvas:getContext("2d")-- 屬性呼叫使用 . 而方法呼叫使用 :-- 設定填圖顏色ctx.fillStyle = "rgb(200,0,0)"-- 設定畫筆顏色ctx.strokeStyle = "rgb(0,0,200)"-- 乘上 deg 可轉為徑度單位deg = math.pi / 180-- 建立多邊形定點位置畫線函式function star(radius, xc, yc, n)    --radius = 100    --xc = 200    --yc = 200    xi = xc + radius*math.cos((360/n)*deg+90*deg)    yi = yc - radius*math.sin((360/n)*deg+90*deg)    ctx:beginPath()    ctx:moveTo(xi,yi)    for i = 2, n+1 do        x = xc + radius*math.cos((360/n)*deg*i+90*deg)        y = yc - radius*math.sin((360/n)*deg*i+90*deg)        ctx:lineTo(x,y)    endend-- 以下利用多邊形畫線函式呼叫執行畫框線或填入顏色-- 畫五邊形框線star(100, 200, 200, 5)ctx:closePath()ctx:stroke()-- 填三角形色塊star(50, 350, 200, 3)ctx:closePath()ctx:fill()-- 改變畫線顏色後, 畫七邊形框線ctx.strokeStyle = "rgb(0,200,20)"star(50, 450, 200, 7)ctx:closePath()ctx:stroke()    </pre><p>&nbsp;</p><h2>數學方程式</h2><p>當 $a \ne 0$, 一元二次方程式 (ax^2 + bx + c = 0) 有兩組解, 可以寫成: $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$</p><p>上述原始碼為:</p><pre class="brush:js;auto-links:false;toolbar:false" contenteditable="false">當 $a \ne 0$, 一元二次方程式 (ax^2 + bx + c = 0) 有兩組解, 可以寫成: $$x = {-b \pm \sqrt{b^2-4ac} \over 2a}.$$</pre><p>希臘字母:&nbsp;<a href="https://en.wikipedia.org/wiki/Greek_alphabet">https://en.wikipedia.org/wiki/Greek_alphabet</a>&nbsp;</p><p>&nbsp;</p><h2>平面機構分析</h2><p>以四連桿及曲柄滑塊機構的位移、速度與加速度分析為例, 希望延伸到八連桿 <a href="https://en.wikipedia.org/wiki/Jansen%27s_linkage">Jansen's walking linkage</a></p><p>四連桿與曲柄滑塊:</p><p><a href="/download/?type=files&amp;filename=Analysis_of_Simple_Planar_Linkages.pdf">Analysis_of_Simple_Planar_Linkages.pdf</a></p><p>Jansen's 八連桿:</p><p><a href="/download/?type=files&amp;filename=Spee_Control_of_Jansen_Linkage_Mechanism_for_Exquisite_Tasks.pdf">Spee_Control_of_Jansen_Linkage_Mechanism_for_Exquisite_Tasks.pdf</a></p><p><a href="/download/?type=files&amp;filename=dynamic_Modeling_and_Nonlinear_Position_Control_of_Jansen_Linkage_Mechanisms.pdf">dynamic_Modeling_and_Nonlinear_Position_Control_of_Jansen_Linkage_Mechanisms.pdf</a></p><p>範例:</p><p><iframe src="https://www.youtube.com/embed/Q8gUvwM89A8" width="560" height="315" frameborder="0" allowfullscreen="allowfullscreen"></iframe></p><p><a href="/download/?type=files&amp;filename=intro_dynamics.pdf">動力學簡介.pdf</a></p><h4>符號式推導</h4><h2>學習 V-rep</h2><p>Virtual robot experimentation platform 虛擬機器人實驗平台</p><p>The robot simulator V-REP, with integrated development environment, is based on a distributed control architecture: each object/model can be individually controlled via an embedded script, a plugin, a ROS or BlueZero node, a remote API client, or a custom solution. This makes V-REP very versatile and ideal for multi-robot applications. Controllers can be written in C/C++, Python, Java, Lua, Matlab or Octave.</p><p>V-REP is used for fast algorithm development, factory automation simulations, fast prototyping and verification, robotics related education, remote monitoring, safety double-checking, etc.</p><p>功能-&nbsp;<a href="http://www.coppeliarobotics.com/features.html">http://www.coppeliarobotics.com/features.html</a>&nbsp;</p><p>使用授權:&nbsp;<a href="http://www.coppeliarobotics.com/licensing.html">http://www.coppeliarobotics.com/licensing.html</a>&nbsp;<a href="http://www.coppeliarobotics.com/assets/v-replicensingoverview.pdf">使用授權說明</a></p><p>使用者手冊:&nbsp;<a href="http://www.coppeliarobotics.com/helpFiles/index.html">http://www.coppeliarobotics.com/helpFiles/index.html</a>&nbsp;<a href="http://www.coppeliarobotics.com/contributions.html">其他資料</a></p><p><a href="http://www.coppeliarobotics.com/otherscenes.html">額外範例場景</a></p><p>論壇:&nbsp;<a href="http://www.forum.coppeliarobotics.com/">http://www.forum.coppeliarobotics.com/</a>&nbsp;</p><p>概述:<a href="http://www.coppeliarobotics.com/assets/v-repoverviewpresentation.pdf">http://www.coppeliarobotics.com/assets/v-repoverviewpresentation.pdf</a>&nbsp;</p><h4>Dynamic Engines</h4><h2>Flask 使用手冊</h2><p><a href="http://flask.pocoo.org/docs/0.10/.latex/Flask.pdf">http://flask.pocoo.org/docs/0.10/.latex/Flask.pdf</a></p><p>local <a href="/download/?type=files&amp;filename=Flask.pdf">Flask.pdf</a>&nbsp;(表示 CMSimfly 的 downlosd 功能是正常的, 但是 downloads 則有問題!!</p><p>Micro 等級的 Python 網際程式框架指的是指保留核心基礎功能, 其他功能則以 plugin 附加</p><p>特性是模組化強, 功能較具彈性</p><p>Flask depends on two external libraries, Werkzeug and Jinja2.</p><p>Werkzeug is a toolkit for WSGI, the standard Python interface between web applications and a variety of servers for both development and deployment.</p><p>Jinja2 renders templates.</p><p>利用 pip 安裝 Flask</p><p>sudo pip install Flask</p><p>假如是在 Windows, 則要將 Python 安裝目錄下的 Scripts 設為指令搜尋路徑</p><p>最小執行程式設定</p><pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from flask import Flask# 將檔案存成 simpleflask.pyapp = Flask(__name__)@app.route('/')def hello_world():    return 'Hello World!'if __name__ == '__main__':    app.run()</pre><p>Flask 程式執行:</p><p>python simpleflask.py</p><p>然後以瀏覽器 <a>http://localhost:5000</a>&nbsp;擷取 Flask 程式回應內容</p><p>So what did that code do?</p><ol><li>First we imported the Flask class. An instance of this class will be our WSGI application.</li><li>&nbsp;Next we create an instance of this class. The first argument is the name of the application&rsquo;s module or package. If you are using a single module (as in this example), you should use __name__ because depending on if it&rsquo;s started as application or imported as module the name will be different ('__main__' versus the actual import name). This is needed so that Flask knows where to look for templates, static files, and so on.&nbsp;</li><li>We then use the route() decorator to tell Flask what URL should trigger our function.</li><li>The function is given a name which is also used to generate URLs for that particular function, and returns the message we want to display in the user&rsquo;s browser.</li><li>Finally we use the run() function to run the local server with our application. The if __name__ == '__main__': makes sure the server only runs if the script is executed directly from the Python interpreter and not used as an imported module.</li><li>To stop the server, hit control-C.</li></ol>